#!/bin/bash

if [ -z "${1}" ]; then
	echo "usage: git watch <user>:<branch> [<local_branch>] OR git watch pull"
	exit
fi

# parse git remote information
origin_url=$(git remote show origin | grep -m 1 -o 'git@[A-Za-z0-9._-]*:[A-Za-z0-9_-]*[A-Za-z0-9\/_-]*\.git')

if [ -z "${origin_url}" ]; then
	echo "origin remote url is not found"
	exit
fi

git_url=$(echo $origin_url | cut -f1 -d":")
git_repo=$(echo $origin_url | cut -f2- -d"/")

# parse argument
if [ "${1}" == "pull" ]; then
	# pull style
	local_branch=$(git rev-parse --abbrev-ref HEAD)

	user=$(echo $local_branch | cut -f1 -d"/")
	if [ -z "${user}" ]; then
		echo "user is not found"
		exit
	fi

	branch=$(echo $local_branch | cut -f2 -d"/")
	if [ -z "${branch}" ]; then
		echo "branch not found"
		exit
	fi

	# git pull
	git pull $git_url:$user/$git_repo $branch:$local_branch
else
	# <user>:<branch> style
	user=$(echo $1 | cut -f1 -d":")
	if [ -z "${user}" ]; then
		echo "user is not found"
		exit
	fi

	branch=$(echo $1 | cut -f2 -d":")
	if [ -z "${branch}" ]; then
		echo "branch not found"
		exit
	fi

	if [ -n "$2" ]; then
		local_branch=$2
	else
		local_branch="${user}/${branch}"
	fi

	# git fetch and checkout
	git fetch $git_url:$user/$git_repo $branch:$local_branch && git checkout $local_branch
fi
